/*
 * omu-rest
 *
 * Laravel製RESTful APIサーバー。著者: [connect0459](https://github.com/connect0459)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// TypesBranchesAPIController binds http requests to an api service and writes the service results to the http response
type TypesBranchesAPIController struct {
	service TypesBranchesAPIServicer
	errorHandler ErrorHandler
}

// TypesBranchesAPIOption for how the controller is set up.
type TypesBranchesAPIOption func(*TypesBranchesAPIController)

// WithTypesBranchesAPIErrorHandler inject ErrorHandler into controller
func WithTypesBranchesAPIErrorHandler(h ErrorHandler) TypesBranchesAPIOption {
	return func(c *TypesBranchesAPIController) {
		c.errorHandler = h
	}
}

// NewTypesBranchesAPIController creates a default api controller
func NewTypesBranchesAPIController(s TypesBranchesAPIServicer, opts ...TypesBranchesAPIOption) Router {
	controller := &TypesBranchesAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the TypesBranchesAPIController
func (c *TypesBranchesAPIController) Routes() Routes {
	return Routes{
		"Call4f16c2a000161aa01c071b5beabaa1f2": Route{
			strings.ToUpper("Delete"),
			"/api/types_branches/{id}",
			c.Call4f16c2a000161aa01c071b5beabaa1f2,
		},
		"Call97af74bfee220c89b0c0c5700fd29b99": Route{
			strings.ToUpper("Get"),
			"/api/types_branches",
			c.Call97af74bfee220c89b0c0c5700fd29b99,
		},
		"Call98726087136b83ce1a215021e6eb76de": Route{
			strings.ToUpper("Put"),
			"/api/types_branches/{id}",
			c.Call98726087136b83ce1a215021e6eb76de,
		},
		"Ce050dbe8f9dcf8a1411581387496db6": Route{
			strings.ToUpper("Post"),
			"/api/types_branches",
			c.Ce050dbe8f9dcf8a1411581387496db6,
		},
		"E33a8a3abd11b078e164c05b62246e43": Route{
			strings.ToUpper("Get"),
			"/api/types_branches/{id}",
			c.E33a8a3abd11b078e164c05b62246e43,
		},
	}
}

// Call4f16c2a000161aa01c071b5beabaa1f2 - Delete a specific types_branches by ID
func (c *TypesBranchesAPIController) Call4f16c2a000161aa01c071b5beabaa1f2(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	idParam := params["id"]
	result, err := c.service.Call4f16c2a000161aa01c071b5beabaa1f2(r.Context(), idParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// Call97af74bfee220c89b0c0c5700fd29b99 - Get a list of types_branches
func (c *TypesBranchesAPIController) Call97af74bfee220c89b0c0c5700fd29b99(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.Call97af74bfee220c89b0c0c5700fd29b99(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// Call98726087136b83ce1a215021e6eb76de - Update a specific types_branches by ID
func (c *TypesBranchesAPIController) Call98726087136b83ce1a215021e6eb76de(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	idParam := params["id"]
	typeBranchParam := TypeBranch{}
	d := json.NewDecoder(r.Body)
	d.DisallowUnknownFields()
	if err := d.Decode(&typeBranchParam); err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	if err := AssertTypeBranchRequired(typeBranchParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	if err := AssertTypeBranchConstraints(typeBranchParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	result, err := c.service.Call98726087136b83ce1a215021e6eb76de(r.Context(), idParam, typeBranchParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// Ce050dbe8f9dcf8a1411581387496db6 - Create a new types_branches
func (c *TypesBranchesAPIController) Ce050dbe8f9dcf8a1411581387496db6(w http.ResponseWriter, r *http.Request) {
	typeBranchParam := TypeBranch{}
	d := json.NewDecoder(r.Body)
	d.DisallowUnknownFields()
	if err := d.Decode(&typeBranchParam); err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	if err := AssertTypeBranchRequired(typeBranchParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	if err := AssertTypeBranchConstraints(typeBranchParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	result, err := c.service.Ce050dbe8f9dcf8a1411581387496db6(r.Context(), typeBranchParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// E33a8a3abd11b078e164c05b62246e43 - Get a specific types_branches by ID
func (c *TypesBranchesAPIController) E33a8a3abd11b078e164c05b62246e43(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	idParam := params["id"]
	result, err := c.service.E33a8a3abd11b078e164c05b62246e43(r.Context(), idParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
