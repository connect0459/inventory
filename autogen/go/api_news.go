/*
 * omu-rest
 *
 * Laravel製RESTful APIサーバー。著者: [connect0459](https://github.com/connect0459)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// NewsAPIController binds http requests to an api service and writes the service results to the http response
type NewsAPIController struct {
	service NewsAPIServicer
	errorHandler ErrorHandler
}

// NewsAPIOption for how the controller is set up.
type NewsAPIOption func(*NewsAPIController)

// WithNewsAPIErrorHandler inject ErrorHandler into controller
func WithNewsAPIErrorHandler(h ErrorHandler) NewsAPIOption {
	return func(c *NewsAPIController) {
		c.errorHandler = h
	}
}

// NewNewsAPIController creates a default api controller
func NewNewsAPIController(s NewsAPIServicer, opts ...NewsAPIOption) Router {
	controller := &NewsAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the NewsAPIController
func (c *NewsAPIController) Routes() Routes {
	return Routes{
		"Bbe79a918bfbb58bc46ed74b43e9b986": Route{
			strings.ToUpper("Delete"),
			"/api/news/{id}",
			c.Bbe79a918bfbb58bc46ed74b43e9b986,
		},
		"Call21b84dbdd75fd20b9c9ddb9b9e68f0a1": Route{
			strings.ToUpper("Get"),
			"/api/news",
			c.Call21b84dbdd75fd20b9c9ddb9b9e68f0a1,
		},
		"Call25ea273290c6cb379ab85e08ff4fadfc": Route{
			strings.ToUpper("Put"),
			"/api/news/{id}",
			c.Call25ea273290c6cb379ab85e08ff4fadfc,
		},
		"D6a12c2e3b4ea9ab588ba9b1cb14748f": Route{
			strings.ToUpper("Post"),
			"/api/news",
			c.D6a12c2e3b4ea9ab588ba9b1cb14748f,
		},
		"Eb815321a4dd395639d4aeef25d9a45c": Route{
			strings.ToUpper("Get"),
			"/api/news/{id}",
			c.Eb815321a4dd395639d4aeef25d9a45c,
		},
	}
}

// Bbe79a918bfbb58bc46ed74b43e9b986 - Delete a specific news by ID
func (c *NewsAPIController) Bbe79a918bfbb58bc46ed74b43e9b986(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	idParam := params["id"]
	result, err := c.service.Bbe79a918bfbb58bc46ed74b43e9b986(r.Context(), idParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// Call21b84dbdd75fd20b9c9ddb9b9e68f0a1 - Get a list of news
func (c *NewsAPIController) Call21b84dbdd75fd20b9c9ddb9b9e68f0a1(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.Call21b84dbdd75fd20b9c9ddb9b9e68f0a1(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// Call25ea273290c6cb379ab85e08ff4fadfc - Update a specific news by ID
func (c *NewsAPIController) Call25ea273290c6cb379ab85e08ff4fadfc(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	idParam := params["id"]
	newsParam := News{}
	d := json.NewDecoder(r.Body)
	d.DisallowUnknownFields()
	if err := d.Decode(&newsParam); err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	if err := AssertNewsRequired(newsParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	if err := AssertNewsConstraints(newsParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	result, err := c.service.Call25ea273290c6cb379ab85e08ff4fadfc(r.Context(), idParam, newsParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// D6a12c2e3b4ea9ab588ba9b1cb14748f - Create a new news
func (c *NewsAPIController) D6a12c2e3b4ea9ab588ba9b1cb14748f(w http.ResponseWriter, r *http.Request) {
	newsParam := News{}
	d := json.NewDecoder(r.Body)
	d.DisallowUnknownFields()
	if err := d.Decode(&newsParam); err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	if err := AssertNewsRequired(newsParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	if err := AssertNewsConstraints(newsParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	result, err := c.service.D6a12c2e3b4ea9ab588ba9b1cb14748f(r.Context(), newsParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// Eb815321a4dd395639d4aeef25d9a45c - Get a specific news by ID
func (c *NewsAPIController) Eb815321a4dd395639d4aeef25d9a45c(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	idParam := params["id"]
	result, err := c.service.Eb815321a4dd395639d4aeef25d9a45c(r.Context(), idParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
