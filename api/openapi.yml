openapi: 3.0.0
info:
  description: "在庫管理PJ管轄のRESTful APIサーバー。"
  title:  inventory
  version: 1.0.0
servers:
- description: ローカルホストのAPIエンドポイント
  url: http://localhost:8000/api
- description: lolipopのAPIエンドポイント
  url: https://example.studyfortwo.org/omu-rest/public/api
paths:
  /books/query/{type_branch_id}:
    get:
      description: ANDおよびOR演算子を使用して書籍を検索します。idの範囲指定も可能。
      operationId: 14d04cd3a807843d383b87ccfca3da7b
      parameters:
      - description: 支部ID
        explode: false
        in: path
        name: type_branch_id
        required: true
        schema:
          type: integer
        style: simple
      - description: 検索キーワードで構成されるクエリ（ANDおよびOR演算子を使用可能）
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: 取得範囲の開始ID
        explode: true
        in: query
        name: f
        required: false
        schema:
          type: integer
        style: form
      - description: 取得範囲の終了ID
        explode: true
        in: query
        name: t
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/_14d04cd3a807843d383b87ccfca3da7b_200_response_inner'
                type: array
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_14d04cd3a807843d383b87ccfca3da7b_404_response'
          description: 該当する書籍が見つからない場合のレスポンス
      summary: 書籍の検索と支部在庫の表示
      tags:
      - books
  /books/column/{type_branch_id}:
    get:
      description: 指定されたbooks_infoテーブルのカラム名と値を使用して書籍を検索
      operationId: 24c56c274fc27bd118b5dfc62fbf0c3e
      parameters:
      - description: 支部ID
        explode: false
        in: path
        name: type_branch_id
        required: true
        schema:
          type: integer
        style: simple
      - description: idカラム
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: titleカラム
        explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - description: authorカラム
        explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - description: publisherカラム
        explode: true
        in: query
        name: publisher
        required: false
        schema:
          type: string
        style: form
      - description: genreカラム
        explode: true
        in: query
        name: genre
        required: false
        schema:
          type: string
        style: form
      - description: descriptionカラム
        explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/_14d04cd3a807843d383b87ccfca3da7b_200_response_inner'
                type: array
          description: 成功した場合のレスポンス
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_14d04cd3a807843d383b87ccfca3da7b_404_response'
          description: 該当する書籍が見つからない場合のレスポンス
      summary: 書籍の検索と支部在庫の表示
      tags:
      - books
  /books_info:
    get:
      operationId: 2f9e356b188781492d6410beee2297c6
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BookInfo'
                type: array
          description: Successful response
      summary: Get a list of books_info
      tags:
      - books_info
    post:
      operationId: 0c3283a323f1a4a3e81dbd5915be7518
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInfo'
        description: BookInfo data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_0c3283a323f1a4a3e81dbd5915be7518_201_response'
          description: Resource created
      summary: Create a new books_info
      tags:
      - books_info
  /books_info/{id}:
    delete:
      operationId: e98599424d7afa9076f6f9f4df52e4e4
      parameters:
      - description: ID of the books_info
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific books_info by ID
      tags:
      - books_info
    get:
      operationId: aefd1f8354eca94d504850ef936b3fb4
      parameters:
      - description: ID of the books_info
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookInfo'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific books_info by ID
      tags:
      - books_info
    put:
      operationId: 57b90f97a8a076e500862e557256c7aa
      parameters:
      - description: ID of the books_info
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInfo'
        description: BookInfo data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_0c3283a323f1a4a3e81dbd5915be7518_201_response'
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific books_info by ID
      tags:
      - books_info
  /books_stocks:
    get:
      operationId: 46c90e16b416e254ed79948864ae87aa
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BookStock'
                type: array
          description: Successful response
      summary: Get a list of books_stocks
      tags:
      - books_stocks
    post:
      operationId: ecc649eea287e26856100c11f96bb3b9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookStock'
        description: BookStock data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ecc649eea287e26856100c11f96bb3b9_201_response'
          description: Resource created
      summary: Create a new books_stocks
      tags:
      - books_stocks
  /books_stocks/{id}:
    delete:
      operationId: 45a5cfdaf4972cd73313133082ca0d26
      parameters:
      - description: ID of the books_stocks
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific books_stocks by ID
      tags:
      - books_stocks
    get:
      operationId: d1c6d70f9a35791050b5da811f1abda1
      parameters:
      - description: ID of the books_stocks
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookStock'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific books_stocks by ID
      tags:
      - books_stocks
    put:
      operationId: dc7eef146e782e14cddc076176ff04c4
      parameters:
      - description: ID of the books_stocks
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookStock'
        description: BookStock data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ecc649eea287e26856100c11f96bb3b9_201_response'
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific books_stocks by ID
      tags:
      - books_stocks
  /contacts:
    get:
      operationId: e670331f5da6af785062a857ec92def2
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Contact'
                type: array
          description: Successful response
      summary: Get a list of contacts
      tags:
      - contacts
    post:
      operationId: 77b53a0b0cb97bf04eafa192e4cbac4e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        description: Contact data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Contact'
                type: object
          description: Resource created
      summary: Create a new contact
      tags:
      - contacts
  /contacts/{id}:
    delete:
      operationId: bc8b0b91abd89481c321fcdb966dc355
      parameters:
      - description: ID of the contact
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific contact by ID
      tags:
      - contacts
    get:
      operationId: 4c4e002507e3a53acc022b210aad20ac
      parameters:
      - description: ID of the contact
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific contact by ID
      tags:
      - contacts
    put:
      operationId: adc814a54ff3a1fdc424293b19ffe8a7
      parameters:
      - description: ID of the contact
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        description: Contact data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Contact'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific contact by ID
      tags:
      - contacts
  /news:
    get:
      operationId: 21b84dbdd75fd20b9c9ddb9b9e68f0a1
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/News'
                type: array
          description: Successful response
      summary: Get a list of news
      tags:
      - news
    post:
      operationId: d6a12c2e3b4ea9ab588ba9b1cb14748f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
        description: News data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/News'
                type: object
          description: Resource created
      summary: Create a new news
      tags:
      - news
  /news/{id}:
    delete:
      operationId: bbe79a918bfbb58bc46ed74b43e9b986
      parameters:
      - description: ID of the news
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific news by ID
      tags:
      - news
    get:
      operationId: eb815321a4dd395639d4aeef25d9a45c
      parameters:
      - description: ID of the news
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific news by ID
      tags:
      - news
    put:
      operationId: 25ea273290c6cb379ab85e08ff4fadfc
      parameters:
      - description: ID of the news
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
        description: News data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/News'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific news by ID
      tags:
      - news
  /orders_customers:
    get:
      operationId: 5217a452519ec6ef916c6a3e2f4070dc
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrderCustomer'
                type: array
          description: Successful response
      summary: Get a list of orders_customers
      tags:
      - orders_customers
    post:
      operationId: 75e0485900f170d2424fdeadf59b0752
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
        description: OrderCustomer data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OrderCustomer'
                type: object
          description: Resource created
      summary: Create a new orders_customers
      tags:
      - orders_customers
  /orders_customers/{id}:
    delete:
      operationId: 5608eff2ef8984e0b7447765f27595aa
      parameters:
      - description: ID of the orders_customers
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific orders_customers by ID
      tags:
      - orders_customers
    get:
      operationId: 4dd012aac3be308644f1e2e152f92c19
      parameters:
      - description: ID of the orders_customers
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCustomer'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific orders_customers by ID
      tags:
      - orders_customers
    put:
      operationId: a0a94057f0311e2193b5897f80221470
      parameters:
      - description: ID of the orders_customers
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
        description: OrderCustomer data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OrderCustomer'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific orders_customers by ID
      tags:
      - orders_customers
  /orders_items:
    get:
      operationId: 89fde6ad08076b992c521fb7c680e29e
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrderItem'
                type: array
          description: Successful response
      summary: Get a list of orders_items
      tags:
      - orders_items
    post:
      operationId: b2909cc3849277b1d5345ccb4205c71d
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        description: OrderItem data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OrderItem'
                type: object
          description: Resource created
      summary: Create a new orders_items
      tags:
      - orders_items
  /orders_items/{id}:
    delete:
      operationId: 6d397dbc3afd3a3f44e4cc08820e0921
      parameters:
      - description: ID of the orders_items
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific orders_items by ID
      tags:
      - orders_items
    get:
      operationId: 0b2a7a56e7d5c2c49b7d11bdb0f48f5c
      parameters:
      - description: ID of the orders_items
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific orders_items by ID
      tags:
      - orders_items
    put:
      operationId: 8bee2e95aba24db3af9b2bc7b5a53f0d
      parameters:
      - description: ID of the orders_items
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        description: OrderItem data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OrderItem'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific orders_items by ID
      tags:
      - orders_items
  /orders_payments:
    get:
      operationId: 52140bdaf9965edfc692b030a9f1898f
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrderPayment'
                type: array
          description: Successful response
      summary: Get a list of orders_payments
      tags:
      - orders_payments
    post:
      operationId: 231e4438ab66e1f3ba4205adf67e0df7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPayment'
        description: OrderPayment data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OrderPayment'
                type: object
          description: Resource created
      summary: Create a new orders_payments
      tags:
      - orders_payments
  /orders_payments/{id}:
    delete:
      operationId: 41c8a438add65c3a1a6f1f7f0efeeea3
      parameters:
      - description: ID of the orders_payments
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific orders_payments by ID
      tags:
      - orders_payments
    get:
      operationId: ed63e750658440b279ee8040dc02aba5
      parameters:
      - description: ID of the orders_payments
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPayment'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific orders_payments by ID
      tags:
      - orders_payments
    put:
      operationId: e7043bcd7e8fc712b2e3a6516f1b8ca8
      parameters:
      - description: ID of the orders_payments
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPayment'
        description: OrderPayment data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OrderPayment'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific orders_payments by ID
      tags:
      - orders_payments
  /types_branches:
    get:
      operationId: 97af74bfee220c89b0c0c5700fd29b99
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeBranch'
                type: array
          description: Successful response
      summary: Get a list of types_branches
      tags:
      - types_branches
    post:
      operationId: ce050dbe8f9dcf8a1411581387496db6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeBranch'
        description: TypeBranch data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypeBranch'
                type: object
          description: Resource created
      summary: Create a new types_branches
      tags:
      - types_branches
  /types_branches/{id}:
    delete:
      operationId: 4f16c2a000161aa01c071b5beabaa1f2
      parameters:
      - description: ID of the types_branches
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific types_branches by ID
      tags:
      - types_branches
    get:
      operationId: e33a8a3abd11b078e164c05b62246e43
      parameters:
      - description: ID of the types_branches
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeBranch'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific types_branches by ID
      tags:
      - types_branches
    put:
      operationId: 98726087136b83ce1a215021e6eb76de
      parameters:
      - description: ID of the types_branches
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeBranch'
        description: TypeBranch data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypeBranch'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific types_branches by ID
      tags:
      - types_branches
  /types_genres:
    get:
      operationId: 6e1cdb613ad44750c97159198eac2c2e
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeGenre'
                type: array
          description: Successful response
      summary: Get a list of types_genres
      tags:
      - types_genres
    post:
      operationId: 5876eb953745b47325ca0277455f8885
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeGenre'
        description: TypeGenre data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypeGenre'
                type: object
          description: Resource created
      summary: Create a new types_genres
      tags:
      - types_genres
  /types_genres/{id}:
    delete:
      operationId: 8ecb93fe6d9f820f901f57aaca0c8650
      parameters:
      - description: ID of the types_genres
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific types_genres by ID
      tags:
      - types_genres
    get:
      operationId: 70509fad3bfe1e67a2caf35fe9ddcd88
      parameters:
      - description: ID of the types_genres
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeGenre'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific types_genres by ID
      tags:
      - types_genres
    put:
      operationId: 32a2a32ec50d514a9cc3ca51fb2d6578
      parameters:
      - description: ID of the types_genres
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeGenre'
        description: TypeGenre data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypeGenre'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific types_genres by ID
      tags:
      - types_genres
  /types_orders_states:
    get:
      operationId: 629ceee33a2f3da61afd7c4b1e462219
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeOrderState'
                type: array
          description: Successful response
      summary: Get a list of types_orders_states
      tags:
      - types_orders_states
    post:
      operationId: 02b2536d5626b2b69c4eb31a6420a222
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeOrderState'
        description: TypeOrderState data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypeOrderState'
                type: object
          description: Resource created
      summary: Create a new types_orders_states
      tags:
      - types_orders_states
  /types_orders_states/{id}:
    delete:
      operationId: 035007899d1aeec37cb670bb3c8a4865
      parameters:
      - description: ID of the types_orders_states
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific types_orders_states by ID
      tags:
      - types_orders_states
    get:
      operationId: f264dd50d2da88f988e3a8e7c592d301
      parameters:
      - description: ID of the types_orders_states
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeOrderState'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific types_orders_states by ID
      tags:
      - types_orders_states
    put:
      operationId: f8e23ef739c0f341106a112ecde4ad7e
      parameters:
      - description: ID of the types_orders_states
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeOrderState'
        description: TypeOrderState data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypeOrderState'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific types_orders_states by ID
      tags:
      - types_orders_states
  /types_payments:
    get:
      operationId: eaf58772b330330fc4d41fc0e8b3b40f
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypePayment'
                type: array
          description: Successful response
      summary: Get a list of types_payments
      tags:
      - types_payments
    post:
      operationId: e757690d6c96a1463bd2f8fce9b45b12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypePayment'
        description: TypePayment data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypePayment'
                type: object
          description: Resource created
      summary: Create a new types_payments
      tags:
      - types_payments
  /types_payments/{id}:
    delete:
      operationId: e83a182945610fbcf279008b97e0de46
      parameters:
      - description: ID of the types_payments
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific types_payments by ID
      tags:
      - types_payments
    get:
      operationId: 15eb6d8e179f295d0df87be744c28155
      parameters:
      - description: ID of the types_payments
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypePayment'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific types_payments by ID
      tags:
      - types_payments
    put:
      operationId: 9dd9af2fc19d3f1e1688cf1b0528218b
      parameters:
      - description: ID of the types_payments
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypePayment'
        description: TypePayment data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypePayment'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific types_payments by ID
      tags:
      - types_payments
  /types_receives:
    get:
      operationId: 0417ea5e25bfb8fd8ee49856f17016fa
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypeReceive'
                type: array
          description: Successful response
      summary: Get a list of types_receives
      tags:
      - types_receives
    post:
      operationId: 50090e82cc0eacb3d7b613a9ff868b17
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeReceive'
        description: TypeReceive data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypeReceive'
                type: object
          description: Resource created
      summary: Create a new types_receives
      tags:
      - types_receives
  /types_receives/{id}:
    delete:
      operationId: b1a600a99289da180209079339415e49
      parameters:
      - description: ID of the types_receives
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource deleted
        "404":
          description: Resource not found
      summary: Delete a specific types_receives by ID
      tags:
      - types_receives
    get:
      operationId: f84e4922d0eeb8c8d92bcbf48af06a74
      parameters:
      - description: ID of the types_receives
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeReceive'
          description: Successful response
        "404":
          description: Resource not found
      summary: Get a specific types_receives by ID
      tags:
      - types_receives
    put:
      operationId: c1543df8694acb50827b80eb08cd5b4a
      parameters:
      - description: ID of the types_receives
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeReceive'
        description: TypeReceive data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TypeReceive'
                type: object
          description: Resource updated
        "404":
          description: Resource not found
      summary: Update a specific types_receives by ID
      tags:
      - types_receives
components:
  schemas:
    BookInfo:
      description: BookInfo Model
      example:
        updated_at: 2023-06-20T21:20:14Z
        author: noa出版
        isbn: "9784908434266"
        genre: 情報学
        publisher: "9784908434266"
        created_at: 2023-06-20T21:20:14Z
        id: 1
        list_price: 1000
        title: これだけは知っておこう!情報リテラシー
        sale_price: 500
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        isbn:
          description: ISBN-13 or ISBN-10
          example: "9784908434266"
          format: string
          type: string
        title:
          description: タイトル
          example: これだけは知っておこう!情報リテラシー
          format: string
          type: string
        author:
          description: 著者
          example: noa出版
          format: string
          type: string
        publisher:
          description: 出版社
          example: "9784908434266"
          format: string
          type: string
        genre:
          description: ジャンル
          example: 情報学
          format: string
          type: string
        list_price:
          description: 定価
          example: 1000
          format: int64
          type: integer
        sale_price:
          description: 販売額
          example: 500
          format: int64
          type: integer
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    BookStock:
      description: BookStock Model
      example:
        sold: 1
        updated_at: 2023-06-20T21:20:14Z
        book_info_id: 1
        created_at: 2023-06-20T21:20:14Z
        id: 1
        type_branch_id: 1
        stock: 4
        order: 1
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        type_branch_id:
          description: 外部キー制約（types_branchesテーブル）
          example: 1
          format: int64
          type: integer
        book_info_id:
          description: 外部キー制約（books_infoテーブル）
          example: 1
          format: int64
          type: integer
        stock:
          description: 未販売の在庫数
          example: 4
          format: int64
          type: integer
        order:
          description: 未処理の予約数
          example: 1
          format: int64
          type: integer
        sold:
          description: 販売済みの在庫数
          example: 1
          format: int64
          type: integer
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    Contact:
      description: Contact Model
      example:
        summary: メンバー加入について
        belong: SFT大学
        updated_at: 2023-06-20T21:20:14Z
        unique: 230C001
        name: SFT太郎
        created_at: 2023-06-20T21:20:14Z
        id: 1
        detail: 活動に興味があるのですが、この時期からでも入れますか？
        email: example@studyfortwo.org
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        unique:
          description: お問い合わせ番号として相手に送信する一意な値
          example: 230C001
          format: string
          type: string
        name:
          description: 名前
          example: SFT太郎
          format: string
          type: string
        belong:
          description: 所属
          example: SFT大学
          format: string
          type: string
        email:
          description: メールアドレス
          example: example@studyfortwo.org
          format: string
          type: string
        summary:
          description: 概要
          example: メンバー加入について
          format: string
          type: string
        detail:
          description: 詳細
          example: 活動に興味があるのですが、この時期からでも入れますか？
          format: string
          type: string
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    News:
      description: News Model
      example:
        updated_at: 2023-06-20T21:20:14Z
        created_at: 2023-06-20T21:20:14Z
        id: 1
        detail: 2023年6月20日からサイトを稼働しております。
        title: サイトの稼働が開始しました。
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        title:
          description: ニュースのタイトル
          example: サイトの稼働が開始しました。
          format: string
          type: string
        detail:
          description: ニュースの記事
          example: 2023年6月20日からサイトを稼働しております。
          format: string
          type: string
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    OrderCustomer:
      description: OrderCustomer Model
      example:
        numbering: 231B001
        belong: 工学部
        notes: 受け取り日時は後から変更できますか？
        university: ○○大学
        created_at: 2023-06-20T21:20:14Z
        receive_date: 2023-06-20T21:20:14Z
        total: 1000
        type_payment_id: 1
        updated_at: 2023-06-20T21:20:14Z
        grade: 1年
        payment_due_date: 2023-06-20T21:20:14Z
        id: 1
        type_branch_id: 1
        name2: ナカオカアキラ
        type_receive_id: 1
        name1: 中岡暉
        email: example@gmail.com
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        type_branch_id:
          description: 支部番号（types_branchesテーブルからの外部キー制約）
          example: 1
          format: int64
          type: integer
        numbering:
          description: 整理番号
          example: 231B001
          format: string
          type: string
        name1:
          description: 名前
          example: 中岡暉
          format: string
          type: string
        name2:
          description: フリガナ or ローマ字
          example: ナカオカアキラ
          format: string
          type: string
        university:
          description: 大学
          example: ○○大学
          format: string
          type: string
        grade:
          description: 学年
          example: 1年
          format: string
          type: string
        belong:
          description: 学科など
          example: 工学部
          format: string
          type: string
        email:
          description: メールアドレス
          example: example@gmail.com
          format: string
          type: string
        total:
          description: 請求合計金額
          example: 1000
          format: int64
          type: integer
        type_receive_id:
          description: 受取り方法分類id（types_receivesテーブルからの外部キー制約）
          example: 1
          format: int64
          type: integer
        receive_date:
          description: 受取り日時
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        type_payment_id:
          description: 支払い方法分類id（types_paymentsテーブルからの外部キー制約）
          example: 1
          format: int64
          type: integer
        payment_due_date:
          description: 支払い期限
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        notes:
          description: 備考・質問
          example: 受け取り日時は後から変更できますか？
          format: string
          type: string
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    OrderItem:
      description: OrderItem Model
      example:
        numbering: 231B001
        updated_at: 2023-06-20T21:20:14Z
        book_info_id: 1
        isbn: "9784908434266"
        created_at: 2023-06-20T21:20:14Z
        id: 1
        order_customer_id: 1
        title: これだけは知っておこう!情報リテラシー
        sale_price: 500
        type_order_state_id: 1
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        order_customer_id:
          description: 外部キー制約（orders_customersテーブル）
          example: 1
          format: int64
          type: integer
        numbering:
          description: 整理番号
          example: 231B001
          format: string
          type: string
        type_order_state_id:
          description: 予約の処理状態を表すステータス。types_orders_statesテーブルから取得
          example: 1
          format: int64
          type: integer
        book_info_id:
          description: 外部キー制約（books_info）
          example: 1
          format: int64
          type: integer
        isbn:
          description: ISBN-13 or ISBN-10
          example: "9784908434266"
          format: string
          type: string
        title:
          description: タイトル
          example: これだけは知っておこう!情報リテラシー
          format: string
          type: string
        sale_price:
          description: 販売額
          example: 500
          format: int64
          type: integer
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    OrderPayment:
      description: OrderPayment Model
      example:
        numbering: 231B001
        postage: 400
        updated_at: 2023-06-20T21:20:14Z
        subtotal: 1000
        fee: 100
        created_at: 2023-06-20T21:20:14Z
        id: 1
        is_paid: true
        order_customer_id: 1
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        order_customer_id:
          description: 外部キー制約（orders_customersテーブル）
          example: 1
          format: int64
          type: integer
        numbering:
          description: 整理番号
          example: 231B001
          format: string
          type: string
        subtotal:
          description: 教科書代の小計
          example: 1000
          format: int64
          type: integer
        postage:
          description: 送料
          example: 400
          format: int64
          type: integer
        fee:
          description: 手数料
          example: 100
          format: int64
          type: integer
        is_paid:
          description: 支払い済みか
          example: true
          format: boolean
          type: boolean
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    TypeBranch:
      description: TypeBranch Model
      example:
        updated_at: 2023-06-20T21:20:14Z
        created_at: 2023-06-20T21:20:14Z
        id: 1
        type: ○○大学
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        type:
          description: 支部名
          example: ○○大学
          format: string
          type: string
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    TypeGenre:
      description: TypeGenre Model
      example:
        updated_at: 2023-06-20T21:20:14Z
        created_at: 2023-06-20T21:20:14Z
        id: 1
        type: ○○大学
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        type:
          description: ジャンル名
          example: ○○大学
          format: string
          type: string
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    TypeOrderState:
      description: TypeOrderState Model
      example:
        updated_at: 2023-06-20T21:20:14Z
        created_at: 2023-06-20T21:20:14Z
        id: 1
        type: 予約
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        type:
          description: 予約、販売済み、キャンセル、返品などのステータス
          example: 予約
          format: string
          type: string
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    TypePayment:
      description: TypePayment Model
      example:
        updated_at: 2023-06-20T21:20:14Z
        created_at: 2023-06-20T21:20:14Z
        id: 1
        type: 現金
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        type:
          description: 支払い方法
          example: 現金
          format: string
          type: string
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    TypeReceive:
      description: TypeReceive Model
      example:
        updated_at: 2023-06-20T21:20:14Z
        created_at: 2023-06-20T21:20:14Z
        id: 1
        type: 露店
      properties:
        id:
          description: ID
          example: 1
          format: int64
          type: integer
        type:
          description: 受取り方法
          example: 露店
          format: string
          type: string
        created_at:
          description: レコード作成日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
        updated_at:
          description: レコード更新日
          example: 2023-06-20T21:20:14Z
          format: date-time
          type: string
      type: object
    _14d04cd3a807843d383b87ccfca3da7b_200_response_inner:
      example:
        books_info:
          updated_at: 2023-06-20T21:20:14Z
          author: noa出版
          isbn: "9784908434266"
          genre: 情報学
          publisher: "9784908434266"
          created_at: 2023-06-20T21:20:14Z
          id: 1
          list_price: 1000
          title: これだけは知っておこう!情報リテラシー
          sale_price: 500
        books_stocks:
          sold: 1
          updated_at: 2023-06-20T21:20:14Z
          book_info_id: 1
          created_at: 2023-06-20T21:20:14Z
          id: 1
          type_branch_id: 1
          stock: 4
          order: 1
      properties:
        books_info:
          $ref: '#/components/schemas/BookInfo'
        books_stocks:
          $ref: '#/components/schemas/BookStock'
      type: object
    _14d04cd3a807843d383b87ccfca3da7b_404_response:
      properties:
        message:
          example: 該当する書籍が見つかりません。
          type: string
      type: object
    _0c3283a323f1a4a3e81dbd5915be7518_201_response:
      allOf:
      - $ref: '#/components/schemas/BookInfo'
      - properties:
          created_at:
            format: date-time
            type: string
          updated_at:
            format: date-time
            type: string
        type: object
      type: object
    ecc649eea287e26856100c11f96bb3b9_201_response:
      allOf:
      - $ref: '#/components/schemas/BookStock'
      - properties:
          created_at:
            format: date-time
            type: string
          updated_at:
            format: date-time
            type: string
        type: object
      type: object
  securitySchemes:
    BearerAuth:
      in: header
      name: api_token
      type: apiKey
